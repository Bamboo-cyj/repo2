<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc.xsd
							http://code.alibabatech.com/schema/dubbo
							http://code.alibabatech.com/schema/dubbo/dubbo.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/security
                          http://www.springframework.org/schema/security/spring-security.xsd">

    <!--  <mvc:annotation-driven></mvc:annotation-driven>
      <context:component-scan base-package="com.itheima.controller"></context:component-scan>
      &lt;!&ndash;
          http：用于定义相关权限控制
          指定哪些资源不需要进行权限校验，可以使用通配符
      &ndash;&gt;
      <security:http security="none" pattern="/js/**" />
      <security:http security="none" pattern="/css/**" />
      <security:http security="none" pattern="/login.jsp" />
      &lt;!&ndash;
          http：用于定义相关权限控制
          auto-config：是否自动配置
                          设置为true时框架会提供默认的一些配置，例如提供默认的登录页面、登出处理等
                          设置为false时需要显示提供登录表单配置，否则会报错
          use-expressions：用于指定intercept-url中的access属性是否使用表达式
      &ndash;&gt;
      <security:http auto-config="true" use-expressions="true">
          &lt;!&ndash;
              intercept-url：定义一个拦截规则
              pattern：对哪些url进行权限控制
              access：在请求对应的URL时需要什么权限，默认配置时它应该是一个以逗号分隔的角色列表，请求的用户只需拥有其中的一个角色就能成功访问对应的URL
              isAuthenticated()：已经经过认证（不是匿名用户）
          &ndash;&gt;
          &lt;!&ndash;只要认证通过就可以访问&ndash;&gt;
          <security:intercept-url pattern="/index.jsp"  access="isAuthenticated()" />
          <security:intercept-url pattern="/a.html"  access="isAuthenticated()" />
          &lt;!&ndash;拥有add权限就可以访问b.html页面&ndash;&gt;
          <security:intercept-url pattern="/b.html"  access="hasAuthority('add')" />
          &lt;!&ndash;拥有ROLE_ADMIN角色就可以访问c.html页面&ndash;&gt;
          <security:intercept-url pattern="/c.html"  access="hasRole('ROLE_ADMIN')" />
          &lt;!&ndash;拥有ROLE_ADMIN角色就可以访问d.html页面，注意：此处虽然写的是ADMIN角色，框架会自动给加上前缀ROLE_&ndash;&gt;
          <security:intercept-url pattern="/d.html"  access="hasRole('ADMIN')" />
          &lt;!&ndash;
              form-login：定义表单登录信息
          &ndash;&gt;
          <security:form-login login-page="/login.jsp"
                               username-parameter="username"
                               password-parameter="password"
                               login-processing-url="/login.do"
                               default-target-url="/index.jsp"
                               always-use-default-target="true"
                               authentication-failure-url="/failure.jsp"
          />
          &lt;!&ndash;
              logout：退出登录
              logout-url：退出登录操作对应的请求路径
              logout-success-url：退出登录后的跳转页面
          &ndash;&gt;
          <security:logout logout-url="/logout" logout-success-url="/login.jsp" />
          &lt;!&ndash;
              csrf：对应CsrfFilter过滤器
              disabled：是否启用CsrfFilter过滤器，如果使用自定义登录页面需要关闭此项，否则登录操作会被禁用（403）
          &ndash;&gt;
          <security:csrf disabled="true"></security:csrf>
      </security:http>

      &lt;!&ndash;配置密码加密对象&ndash;&gt;
      <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

      &lt;!&ndash;
          authentication-manager：认证管理器，用于处理认证操作
      &ndash;&gt;
      <security:authentication-manager>
          &lt;!&ndash;
              authentication-provider：认证提供者，执行具体的认证逻辑
          &ndash;&gt;
          <security:authentication-provider user-service-ref="userService">
              &lt;!&ndash;指定密码加密策略&ndash;&gt;
              <security:password-encoder ref="passwordEncoder" />
          </security:authentication-provider>
      </security:authentication-manager>

      <bean id="userService" class="com.itheima.security.UserService2"></bean>

      &lt;!&ndash;开启注解方式权限控制&ndash;&gt;
      <security:global-method-security pre-post-annotations="enabled" />-->

    <security:http pattern="/login.html" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/js/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <security:http pattern="/template/**" security="none"></security:http>

    <security:http auto-config="true" use-expressions="true">
        <security:headers>
            <!--设置在页面可以通过iframe访问受保护的页面，默认为不允许访问-->
            <security:frame-options policy="SAMEORIGIN"></security:frame-options>
        </security:headers>
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"></security:intercept-url>


        <security:form-login login-page="/login.html"
                             username-parameter="username" password-parameter="password"
                             login-processing-url="/login.do" authentication-failure-url="/login.html"
                            default-target-url="/pages/main.html" always-use-default-target="true"
        ></security:form-login>
        <security:csrf disabled="true"></security:csrf>
        <security:logout logout-url="/logout.do" invalidate-session="true" logout-success-url="/login.html"
        ></security:logout>
    </security:http>

    <security:global-method-security pre-post-annotations="enabled"></security:global-method-security>
    <!-- <security:authentication-manager>
         <security:authentication-provider>
             <security:user-service>
                 <security:user name="admin" authorities="ROLE_ADMIN" password="{noop}123456"></security:user>
             </security:user-service>
         </security:authentication-provider>
     </security:authentication-manager>-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="getUserInfo">
            <security:password-encoder ref="bCryptPasswordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean name="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
</beans>